{"version":3,"sources":["components/AppHeader/index.js","components/AppHeader/AppHeader.js","components/SearchPanel/index.js","components/SearchPanel/SearchPanel.js","components/TodoListItem/index.js","components/TodoListItem/TodoListItem.js","components/TodoList/index.js","components/TodoList/TodoList.js","components/ItemStatusFilter/index.js","components/ItemStatusFilter/ItemStatusFilter.js","components/AddTaskPanel/index.js","components/AddTaskPanel/AddTaskPanel.js","components/App/index.js","components/App/App.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","placeholder","TodoListItem","props","label","onDeleted","onImportant","onDone","important","itemClasses","push","join","onClick","type","TodoList","todos","elements","map","id","itemProps","key","ItemStatusFilter","role","Component","AddTaskPanel","state","onInputChange","e","setState","target","value","onSubmit","preventDefault","onAdded","this","onChange","App","maxId","todoData","createTodoItem","deleteItem","elemIndex","findIndex","el","slice","addItem","newItem","onToggleDone","toggleProperty","onToggleImportant","items","propName","itemIndex","oldItem","doneCount","filter","length","todoCount","ReactDOM","render","document","getElementById"],"mappings":"6WAEeA,G,MCEG,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACzB,OACE,yBAAKC,UAAU,qBACb,wBAAIA,UAAU,cAAd,aACA,uBAAGA,UAAU,kBACX,0BAAMA,UAAU,yBAAyBF,GAD3C,gBACoE,0BAAME,UAAU,uBAAuBD,GAD3G,YCNSE,G,MCEK,WAClB,OAAO,2BAAOD,UAAU,4BACtBE,YAAY,qB,QCJDC,G,MCEM,SAACC,GAAW,IACvBC,EAA2DD,EAA3DC,MAAOC,EAAoDF,EAApDE,UAAWC,EAAyCH,EAAzCG,YAAaC,EAA4BJ,EAA5BI,OAAQC,EAAoBL,EAApBK,UACzCC,EAAc,CAAC,kBAQrB,OATmEN,EAATL,MAGxDW,EAAYC,KAAK,QAEfF,GACFC,EAAYC,KAAK,aAIjB,0BAAMX,UAAWU,EAAYE,KAAK,MAChC,0BACEZ,UAAU,uBACVa,QAAUL,GACRH,GAEJ,4BAAQS,KAAK,SACLd,UAAU,6CACVa,QAAUN,GAChB,uBAAGP,UAAU,uBAGf,4BAAQc,KAAK,SACLd,UAAU,4CACVa,QAAUP,GAChB,uBAAGN,UAAU,sBC5BNe,G,MCGE,SAACX,GAAW,IACnBY,EAA0CZ,EAA1CY,MAAOV,EAAmCF,EAAnCE,UAAWC,EAAwBH,EAAxBG,YAAaC,EAAWJ,EAAXI,OACjCS,EAAWD,EAAME,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAOC,EAAgB,sBACnD,OACE,wBAAIC,IAAKF,EAAInB,UAAU,mBACrB,kBAAC,EAAD,iBACOoB,EADP,CAEEd,UAAY,kBAAMA,EAAUa,IAC5BZ,YAAc,kBAAMA,EAAYY,IAChCX,OAAS,kBAAMA,EAAOW,WAM9B,OACE,wBAAInB,UAAU,wBACViB,KCpBOK,G,uLCKX,OACE,yBAAKtB,UAAU,YAAYuB,KAAK,SAC9B,4BAAQT,KAAK,SACLd,UAAU,gBADlB,OAEA,4BAAQc,KAAK,SACLd,UAAU,6BADlB,UAEA,4BAAQc,KAAK,SACLd,UAAU,6BADlB,a,GATsCwB,cCF/BC,G,iNCGbC,MAAQ,CACNrB,MAAO,I,EAGTsB,cAAgB,SAACC,GACf,EAAKC,SAAS,CACZxB,MAAOuB,EAAEE,OAAOC,S,EAIpBC,SAAW,SAACJ,GACVA,EAAEK,iBACF,EAAK7B,MAAM8B,QAAQ,EAAKR,MAAMrB,OAC9B,EAAKwB,SAAS,CACZxB,MAAO,M,wEAKT,OACE,0BACEL,UAAU,6BACVgC,SAAWG,KAAKH,UAChB,2BACElB,KAAK,OACLd,UAAU,mCACVoC,SAAWD,KAAKR,cAChBzB,YAAY,iBACZ6B,MAAQI,KAAKT,MAAMrB,QACrB,4BAAQL,UAAU,wBAAlB,iB,GA9BkCwB,cCF3Ba,G,iNCQbC,MAAQ,I,EAERZ,MAAQ,CACNa,SAAU,CACR,EAAKC,eAAe,mBACpB,EAAKA,eAAe,iBACpB,EAAKA,eAAe,oB,EAaxBC,WAAa,SAACtB,GACZ,EAAKU,UAAS,YAAmB,IAAhBU,EAAe,EAAfA,SACTG,EAAYH,EAASI,WAAU,SAACC,GAAD,OAAQA,EAAGzB,KAAOA,KAMvD,MAAO,CACLoB,SANmB,sBAChBA,EAASM,MAAM,EAAGH,IADF,YAEhBH,EAASM,MAAMH,EAAY,U,EASpCI,QAAU,SAACzC,GACT,IAAM0C,EAAU,EAAKP,eAAenC,GAEpC,EAAKwB,UAAS,YAAmB,IAAhBU,EAAe,EAAfA,SAEf,MAAO,CACLA,SAFmB,sBAAOA,GAAP,CAAiBQ,S,EAoB1CC,aAAe,SAAC7B,GACd,EAAKU,UAAS,YAAmB,IAAhBU,EAAe,EAAfA,SACf,MAAO,CACLA,SAAU,EAAKU,eAAeV,EAAUpB,EAAI,a,EAKlD+B,kBAAoB,SAAC/B,GACnB,EAAKU,UAAS,YAAmB,IAAhBU,EAAe,EAAfA,SACf,MAAO,CACLA,SAAU,EAAKU,eAAeV,EAAUpB,EAAI,kB,8EA1DnCd,GACb,MAAO,CACLA,QACAN,MAAM,EACNU,WAAW,EACXU,GAAIgB,KAAKG,W,qCA6BEa,EAAOhC,EAAIiC,GACxB,IAAMC,EAAYF,EAAMR,WAAU,SAACC,GAAD,OAAQA,EAAGzB,KAAOA,KAC9CmC,EAAUH,EAAME,GAChBN,EAAO,eAAQO,EAAR,eAAkBF,GAAYE,EAAQF,KAOnD,MANkB,sBACbD,EAAMN,MAAM,EAAGQ,IADF,CAEhBN,GAFgB,YAGbI,EAAMN,MAAMQ,EAAY,O,+BAsBrB,IACAd,EAAaJ,KAAKT,MAAlBa,SACFgB,EAAYhB,EAASiB,QAAO,SAACZ,GAAD,OAAQA,EAAG7C,QAAM0D,OAC7CC,EAAYnB,EAASkB,OAASF,EACpC,OACE,yBAAKvD,UAAU,YACb,kBAAC,EAAD,CAAWF,KAAM4D,EAAW3D,KAAMwD,IAClC,yBAAKvD,UAAU,oBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,EAAD,CACEgB,MAAOuB,EACPjC,UAAY6B,KAAKM,WACjBlC,YAAc4B,KAAKe,kBACnB1C,OAAW2B,KAAKa,eAElB,kBAAC,EAAD,CAAcd,QAAUC,KAAKW,e,GA3FJtB,cCJjCmC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e7c385aa.chunk.js","sourcesContent":["import AppHeader from './AppHeader';\n\nexport default AppHeader;\n","import React from 'react';\n\nimport './AppHeader.css';\n\nconst AppHeader = ({ toDo, done }) => {\n  return (\n    <div className=\"d-flex app-header\">\n      <h1 className=\"main-title\">Todo List</h1>\n      <p className=\"text-secondary\">\n        <span className=\"badge badge-secondary\">{toDo}</span> more to do, <span className=\"badge badge-success\">{done}</span> done\n      </p>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import SearchPanel from './SearchPanel';\n\nexport default SearchPanel;\n","import React from 'react';\n\nimport './SearchPanel.css';\n\nconst SearchPanel = () => {\n  return <input className=\"form-control search-panel\"\n    placeholder=\"type to search\" />;\n};\n\nexport default SearchPanel;\n","import TodoListItem from './TodoListItem';\n\nexport default TodoListItem;\n","import React from 'react';\n\nimport './TodoListItem.css';\n\nconst TodoListItem = (props) => {\n  const { label, onDeleted, onImportant, onDone, important, done } = props;\n  const itemClasses = ['todo-list-item'];\n  if (done) {\n    itemClasses.push('done');\n  }\n  if (important) {\n    itemClasses.push('important');\n  }\n\n  return (\n    <span className={itemClasses.join(' ')}>\n      <span \n        className=\"todo-list-item-label\"\n        onClick={ onDone }>\n        { label }\n      </span>\n      <button type=\"button\"\n              className=\"btn btn-outline-success btn-sm float-right\"\n              onClick={ onImportant }>\n        <i className=\"fa fa-exclamation\" />\n      </button>\n\n      <button type=\"button\"\n              className=\"btn btn-outline-danger btn-sm float-right\"\n              onClick={ onDeleted }>\n        <i className=\"fa fa-trash-o\" />\n      </button>\n    </span>\n  );\n};\n\nexport default TodoListItem;\n","import TodoList from './TodoList';\n\nexport default TodoList;\n","import React from 'react';\n\nimport TodoListItem from '../TodoListItem';\nimport './TodoList.css'\n\nconst TodoList = (props) => {\n  const { todos, onDeleted, onImportant, onDone } = props;\n  const elements = todos.map(({ id, ...itemProps }) => {\n    return (\n      <li key={id} className=\"list-group-item\">\n        <TodoListItem \n          { ...itemProps }\n          onDeleted={ () => onDeleted(id) } \n          onImportant={ () => onImportant(id) }\n          onDone={ () => onDone(id) }\n          />\n      </li>\n    );\n  });\n\n  return (\n    <ul className=\"list-group todo-list\">\n      { elements }\n    </ul>\n  );\n};\n\nexport default TodoList;","import ItemStatusFilter from './ItemStatusFilter';\n\nexport default ItemStatusFilter;\n","import React, { Component } from 'react';\n\nimport './ItemStatusFilter.css';\n\nexport default class ItemStatusFilter extends Component {\n\n  render() {\n    return (\n      <div className=\"btn-group\" role=\"group\">\n        <button type=\"button\" \n                className=\"btn btn-info\">All</button>\n        <button type=\"button\" \n                className=\"btn btn-outline-secondary\">Active</button>\n        <button type=\"button\" \n                className=\"btn btn-outline-secondary\">Done</button>\n      </div>\n    );\n  }\n}\n","import AddTaskPanel from './AddTaskPanel';\n\nexport default AddTaskPanel;\n","import React, { Component } from 'react';\n\nimport './AddTaskPanel.css';\n\nexport default class AddTaskPanel extends Component {\n  state = {\n    label: ''\n  };\n\n  onInputChange = (e) => {\n    this.setState({\n      label: e.target.value\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.onAdded(this.state.label);\n    this.setState({\n      label: ''\n    });\n  };\n\n  render() {\n    return (\n      <form \n        className=\"mt-3 add-task-panel d-flex\" \n        onSubmit={ this.onSubmit }>\n        <input \n          type=\"text\"\n          className=\"form-control mr-2 add-task-input\"\n          onChange={ this.onInputChange }\n          placeholder=\"Type task here\"\n          value={ this.state.label } />\n        <button className=\"btn btn-outline-info\">Add Task</button>\n      </form>\n    );\n  }\n};\n","import App from './App';\n\nexport default App;\n","import React, { Component } from 'react';\n\nimport AppHeader from '../AppHeader';\nimport SearchPanel from '../SearchPanel';\nimport TodoList from '../TodoList';\nimport ItemStatusFilter from '../ItemStatusFilter';\nimport AddTaskPanel from '../AddTaskPanel';\nimport './App.css';\n\nexport default class App extends Component {\n  maxId = 100;\n\n  state = {\n    todoData: [\n      this.createTodoItem('Get Some Coffee'),\n      this.createTodoItem('Enjoy The Day'),\n      this.createTodoItem('Crack The Code'),\n    ],\n  };\n\n  createTodoItem(label) {\n    return {\n      label,\n      done: false,\n      important: false,\n      id: this.maxId++,\n    };\n  }\n\n  deleteItem = (id) => {\n    this.setState(({ todoData }) => {\n      const elemIndex = todoData.findIndex((el) => el.id === id);\n      const updatedTodoData = [\n        ...todoData.slice(0, elemIndex),\n        ...todoData.slice(elemIndex + 1)\n      ];\n\n      return {\n        todoData: updatedTodoData,\n      };\n    });\n  };\n\n  addItem = (label) => {\n    const newItem = this.createTodoItem(label);\n\n    this.setState(({ todoData }) => {\n      const updatedTodoData = [...todoData, newItem];\n      return {\n        todoData: updatedTodoData,\n      };\n    });\n  };\n\n  toggleProperty(items, id, propName) {\n    const itemIndex = items.findIndex((el) => el.id === id);\n    const oldItem = items[itemIndex];\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\n    const updatedItems = [\n      ...items.slice(0, itemIndex),\n      newItem,\n      ...items.slice(itemIndex + 1)\n    ];\n    \n    return updatedItems;\n  }\n\n  onToggleDone = (id) => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.toggleProperty(todoData, id, 'done'),\n      };\n    });\n  };\n\n  onToggleImportant = (id) => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.toggleProperty(todoData, id, 'important'),\n      };\n    });\n  };\n\n  render() {\n    const { todoData } = this.state;\n    const doneCount = todoData.filter((el) => el.done).length;\n    const todoCount = todoData.length - doneCount;\n    return (\n      <div className='todo-app'>\n        <AppHeader toDo={todoCount} done={doneCount}/>\n        <div className='top-panel d-flex'>\n          <SearchPanel />\n          <ItemStatusFilter />\n        </div>\n        <TodoList \n          todos={todoData} \n          onDeleted={ this.deleteItem }\n          onImportant={ this.onToggleImportant }\n          onDone = { this.onToggleDone }\n          />\n        <AddTaskPanel onAdded={ this.addItem }/>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}